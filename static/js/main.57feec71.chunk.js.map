{"version":3,"sources":["context/Context.js","context/Provider.js","components/EndsActivity.js","components/style.js","components/ActivityTime.js","assets/pomodoro.png","pages/Chronometer.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","Provider","children","useState","time","setTime","paused","setPaused","intervalTime","setIntervalTime","state","secondInput","setSecondInput","value","EndsActivity","useEffect","Audio","play","ProgressBarContainer","styled","div","ProgressContainer","Progress","ActivityTime","progress","style","width","Chronometer","useContext","counter","setInterval","prevTime","prevIntervalTime","clearInterval","className","src","pomodoro","alt","onClick","prevPaused","htmlFor","type","name","placeholder","onChange","e","target","Home","href","rel","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57feec71.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;","import React, { useState } from 'react';\nimport Context from './Context';\n\nfunction Provider({ children }) {\n\n  const [time, setTime] = useState(25);\n  const [paused, setPaused] = useState(false);\n  const [intervalTime, setIntervalTime] = useState(5);\n  const [secondInput, setSecondInput] = useState(25);\n\n  const state = {\n    time,\n    setTime,\n    paused,\n    setPaused,\n    intervalTime, \n    setIntervalTime,\n    secondInput,\n    setSecondInput,\n  };\n\n  return (\n    <Context.Provider value={ state }>\n      { children }\n    </Context.Provider>\n  );\n}\n\nexport default Provider;\n","import React, {useEffect} from 'react';\n\nconst EndsActivity = () => {\n\n\n useEffect(() => {\n  const audio = new Audio('https://www.soundjay.com/buttons/beep-01a.mp3');\n  audio.play();\n },[])\n\n  return(\n    <h2>Fim da Atividade! Hora do Intervalo!</h2>\n  )\n}\n\nexport default EndsActivity;","import styled from 'styled-components';\n\nconst ProgressBarContainer = styled.div`\n  flex-grow: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 20px;\n`;\n\nconst ProgressContainer = styled.div`\n  flex-grow: 1;\n  background: white;\n  height: 10px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color:darkred;\n`;\n\nconst Progress = styled.div`\n  height: 100%;\n  border-radius: 5px;\n  background: green;\n  box-shadow: 0 0 0.75em green;\n`;\n\nexport {\n  ProgressBarContainer,\n  Progress,\n  ProgressContainer,\n};","import React from 'react';\nimport {\n  Progress,\n  ProgressBarContainer,\n  ProgressContainer,\n} from './style';\n\n\nconst ActivityTime = ({ progress }) => {\n  return (\n    <ProgressBarContainer>\n      <ProgressContainer>\n        <Progress style={{ width: `${progress}%` }}></Progress>\n      </ProgressContainer>\n    </ProgressBarContainer>\n  );\n};\n\nexport default ActivityTime;","export default __webpack_public_path__ + \"static/media/pomodoro.0ce5c56f.png\";","import React, {useContext, useEffect} from 'react';\nimport Context from \"../context/Context\";\nimport EndsActivity from '../components/EndsActivity.js';\nimport ActivityTime from '../components/ActivityTime.js';\nimport './pages.css';\nimport pomodoro from '../assets/pomodoro.png';\n\nconst Chronometer = () => {\n  const {\n    time,\n    setTime,\n    paused,\n    setPaused,\n    intervalTime,\n    setIntervalTime,\n    secondInput,\n    setSecondInput,\n   } = useContext(Context);\n\n  useEffect(() => {\n    const counter = setInterval(() => {\n      if(!paused && time > 0){\n        setTime(prevTime => prevTime -1);\n      }\n      if(!paused && time === 0 && intervalTime > 0){\n        setIntervalTime(prevIntervalTime => prevIntervalTime -1);\n      }\n    }, 1000);\n    return () => {clearInterval(counter);};\n  });\n  \n  const reset = () => {\n      setTime(25);\n      setPaused(false);\n    }\n\n  const pause = () => {\n    setPaused(prevPaused => !prevPaused);\n  }\n\n  return (\n    <div className='pomodoro-container'>\n      <h1>Cronometro - Técnica Pomodoro</h1>\n      <div className='img-container'>\n        <img className='pomodoro-img' src= {pomodoro} alt='pomodoro'/>\n      </div>\n      <div>\n        {time === 0 \n          ? <EndsActivity />\n          : (\n          <div className='activity-container'>\n            <h1>Tempo de atividade: {time} segundos </h1>\n            <ActivityTime progress={ time } />\n          </div>\n          )\n        }\n        </div>\n        <div>\n          {time === 0 \n          && (<h2>Tempo de intervalo: {intervalTime} segundos</h2>)}\n        </div>\n        <div className='input-container'>\n          <button onClick={ reset }>Resetar</button>\n          <button onClick={pause}>Pausar</button>\n          <label htmlFor='seconds'>\n          <input type='number' name='seconds' placeholder=\"Segundos\" onChange={ (e)=> setSecondInput(e.target.value) }/>\n          </label>\n          <button onClick={() => setTime(secondInput)}>Novo tempo de atividade</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Chronometer;\n","import React from 'react'\nimport { Link } from 'react-router-dom' \nimport './pages.css'\n\nconst Home = () => {\n\n  return(\n    <div className='home-container'>\n      <h1>Desafio - Pomodoro</h1>\n      <p>\n          Bem vindos ao Teste Técnico de Henrique Zózimo para a VilaApps!\n      </p>\n      <br/>\n      <p> \n        A <a href='https://brasilescola.uol.com.br/dicas-de-estudo/tecnica-pomodoro-que-e-e-como-funciona.htm' target='_blank' rel=\"noreferrer\">Técnica Pomodoro</a> é um método de gerenciamento de tempo desenvolvido por\n        Francesco Cirillo no final dos anos 1980. A técnica usa um cronômetro para dividir o\n        trabalho em intervalos, tradicionalmente de 25 minutos de duração, separados por\n        intervalos curtos - 5 minutos.\n        Porém, buscando uma maior praticidade para esta página que é uma avaliação técnica, os temporizadores\n        estarão em segundos e não em minutos. Ou seja, os 25 minutos de duração\n        serão 25 segundos e os 5 minutos de intervalo serão 5 segundos.\n      </p>\n        <Link to=\"/pomodoro/chronometer\">Ligar cronômetro</Link>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Chronometer from './pages/Chronometer.js';\nimport Home from './pages/Home'\n\nfunction App() {\n  return (\n      <Switch>\n          <Route exact path=\"/pomodoro\" component={Home} />\n          <Route path=\"/pomodoro/chronometer\"  component={Chronometer}/>\n      </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Provider from './context/Provider';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <Provider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}